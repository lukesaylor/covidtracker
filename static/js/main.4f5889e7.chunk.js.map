{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","components/StatePicker/StatePicker.module.css","images/covidheader.png","components/NewsTicker/NewsTicker.module.css","App.module.css","components/USCards/USCards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/StatePicker/StatePicker.jsx","components/USCards/USCards.jsx","components/USChart/USChart.jsx","components/Navbar/Navbar.jsx","components/NewsTicker/NewsTicker.jsx","App.js","serviceWorker.js","index.js","components/Cards/Cards.module.css","components/Navbar/Navbar.module.css","components/Chart/Chart.module.css","components/USChart/USChart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","sUrl","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchUSData","initialUSData","USData","fetchDailyUSData","reverseData","dailyUSData","positive","death","dateChecked","dailyCases","positiveIncrease","reverse","stateDataCache","fetchDailyStateData","stateCode","stateData","stateMetadata","fetchStates","dailyStateData","stateInitials","state","stateName","currentStateData","negative","hospitalizedCurrently","inIcuCurrently","onVentilatorCurrently","statePositive","stateRecovered","stateDeath","stateDateChecked","currentStateNews","articles","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","classname","chart","labels","datasets","label","borderColor","backgroundColor","fill","options","title","display","text","barChart","legend","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","align","defaultValue","onChange","e","target","i","key","StatePicker","handleStateChange","fetchedStates","setFetchedStates","children","selectedIndex","innerText","USCards","currentStateMetadata","TableContainer","stateTable","Paper","Table","aria-label","TableHead","tableHead","TableRow","TableCell","TableBody","USChart","setDailyUSData","fetchUSAPI","barChartUSCases","moment","calendar","barChartUSDeaths","barChartUSDailyCases","Navbar","logo","src","CovidHeader","alt","ButtonContainer","Link","to","Button","useStyles","makeStyles","root","maxWidth","media","height","NewsTicker","stateNews","classes","NewsCards","slice","CardActionArea","CardMedia","image","urlToImage","CardActions","href","size","source","newsContainer","App","currentState","fetchedData","setState","usNews","toLowerCase","fetchedDailyStateData","fetchedCurrentStateData","replace","fetchedStateNews","fetchedUSData","this","path","strict","exact","React","Component","Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f5889e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"StatePicker_formControl__3j2c9\"};","module.exports = __webpack_public_path__ + \"static/media/covidheader.5459a163.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsContainer\":\"NewsTicker_newsContainer__3OAQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"USCards_container__16NMV\",\"card\":\"USCards_card__2q-OB\",\"infected\":\"USCards_infected__ISere\",\"recovered\":\"USCards_recovered__PIpEk\",\"deaths\":\"USCards_deaths__2FvMF\",\"stateTable\":\"USCards_stateTable__2IDbg\",\"tableHead\":\"USCards_tableHead__36rWu\"};","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n   \n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Active Cases of Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Recovered Cases of Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={10} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Deaths from Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nconst sUrl = \"https://api.covidtracking.com\";\n\nvar newsUrl = \"http://newsapi.org/v2/everything?\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchUSData = async () => {\n  try {\n    const initialUSData = await axios.get(`${sUrl}/v1/us/current.json`);\n\n    const USData = initialUSData.data[0];\n\n    return USData;\n  } catch (error) {}\n};\n\nexport const fetchDailyUSData = async () => {\n  try {\n    const { data } = await axios.get(`${sUrl}/v1/us/daily.json`);\n\n    const reverseData = data.map((dailyUSData) => ({\n      confirmed: dailyUSData.positive,\n      deaths: dailyUSData.death,\n      date: dailyUSData.dateChecked,\n      recovered: dailyUSData.recovered,\n      dailyCases: dailyUSData.positiveIncrease,\n    }));\n    const modifiedData = reverseData.reverse();\n    return modifiedData;\n  } catch (error) {}\n};\n\nlet stateDataCache = {};\nexport const fetchDailyStateData = async (stateCode) => {\n  try {\n    if (!stateDataCache[stateCode]) {\n      const { data } = await axios.get(\n        `${sUrl}/v1/states/${stateCode}/daily.json`\n      );\n\n      const reverseData = data.map((stateData) => ({\n        confirmed: stateData.positive,\n        deaths: stateData.death,\n        date: stateData.dateChecked,\n        dailyCases: stateData.positiveIncrease,\n      }));\n      stateDataCache[stateCode] = reverseData.reverse();\n    }\n\n    return stateDataCache[stateCode];\n  } catch (error) {}\n};\n\nlet stateMetadata = null;\nexport const fetchStates = async () => {\n  try {\n    if (!stateMetadata) {\n      const { data } = await axios.get(`${sUrl}/v1/states/info.json`);\n\n      stateMetadata = data.map((dailyStateData) => ({\n        stateInitials: dailyStateData.state,\n        stateName: dailyStateData.name,\n      }));\n    }\n\n    return stateMetadata;\n  } catch (error) {}\n};\n\nexport const currentStateData = async (stateCode) => {\n  try {\n    const {\n      data: {\n        positive,\n        recovered,\n        death,\n        dateChecked,\n        negative,\n        hospitalizedCurrently,\n        inIcuCurrently,\n        onVentilatorCurrently,\n      },\n    } = await axios.get(`${sUrl}/v1/states/${stateCode}/current.json`);\n\n    return {\n      statePositive: positive,\n      stateRecovered: recovered,\n      stateDeath: death,\n      stateDateChecked: dateChecked,\n      negative,\n      hospitalizedCurrently,\n      inIcuCurrently,\n      onVentilatorCurrently,\n    };\n  } catch (error) {}\n};\n\nexport const currentStateNews = async (stateName) => {\n  try {\n    const  data = await axios.get(\n      `${newsUrl}qInTitle=${stateName}+covid&language=en&sortBy=relevancy&apiKey=cdd0e980c7ae4905a7a7d2cdc5db6932`\n    );\n    const articles = data.data.articles;\n   \n    console.log(stateName);\n    return articles;\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n \n   \n  const lineChart = dailyData.length ? (\n    <Bar classname={styles.chart}\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"rgba(0, 255, 0, 1)\",\n            backgroundColor: \"#1D3557\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"#E63946\",\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: { display: true, text: `World` },\n         \n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar classname={styles.chart}\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"#1D3557\",\n              \"#A8DADC\",\n              \"#E63946\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n   \n  \n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        align=\"center\"\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">-Select Country-</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./StatePicker.module.css\";\nimport { fetchStates } from \"../../api\";\n\nconst StatePicker = ({ handleStateChange }) => {\n  const [fetchedStates, setFetchedStates] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedStates(await fetchStates());\n    };\n\n    fetchAPI();\n  }, [setFetchedStates]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        align=\"center\"\n        defaultValue=\"\"\n        onChange={(e) => handleStateChange({ stateCode: e.target.value, stateName: e.target.children[e.target.selectedIndex].innerText})}\n      >\n        <option value=\"\">-Select State-</option>\n        {fetchedStates.map((fetchedStates, i) => (\n          <option key={i} value={fetchedStates.stateInitials}>\n            {fetchedStates.stateName}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default StatePicker;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from \"./USCards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst USCards = ({\n  USData: { positive, death, recovered, dateChecked },\n  currentStateMetadata,\n  currentStateData,\n}) => {\n  console.log(currentStateData);\n  if (!positive) {\n    return \"Loading Data...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={10}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {currentStateMetadata ? (`${currentStateMetadata.stateName} Infected`):(\"USA Infected\")}\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={currentStateMetadata ?(currentStateData.statePositive):(positive)} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(dateChecked).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Active Cases of Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={10}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            {currentStateMetadata ? (`${currentStateMetadata.stateName} Recovered`):(\"USA Recovered\")}\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={currentStateMetadata ?(currentStateData.stateRecovered):(recovered)} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(dateChecked).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Recovered Cases of Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={10}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n            {currentStateMetadata ? (`${currentStateMetadata.stateName} Deaths`):(\"USA Deaths\")}\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={currentStateMetadata ?(currentStateData.stateDeath):(death)} duration={2.5} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(dateChecked).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Deaths from Covid19\n            </Typography>\n          </CardContent>\n        </Grid>\n        {currentStateMetadata ? (\n          <>\n            <TableContainer className={styles.stateTable} component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead className={styles.tableHead}>\n                  <TableRow>\n                    <TableCell align=\"center\">\n                      <h3>{currentStateMetadata.stateName}</h3>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <h3>{new Date(\n                        currentStateData.stateDateChecked\n                      ).toDateString()}</h3>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\">Infected</TableCell>\n                    <TableCell align=\"center\">\n                      {currentStateData.statePositive}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell align=\"center\">Deaths</TableCell>\n                    <TableCell align=\"center\">\n                      {currentStateData.stateDeath}\n                    </TableCell>\n                  </TableRow>\n                  {currentStateData.stateRecovered ? (\n                    <TableRow>\n                      <TableCell align=\"center\">Recovered</TableCell>\n                      <TableCell align=\"center\">\n                        {currentStateData.stateRecovered}\n                      </TableCell>\n                    </TableRow>\n                  ) : null}\n                  {currentStateData.negative ? (\n                    <TableRow>\n                      <TableCell align=\"center\">Negative Tests</TableCell>\n                      <TableCell align=\"center\">\n                        {currentStateData.negative}\n                      </TableCell>\n                    </TableRow>\n                  ) : null}\n                  {currentStateData.hospitalizedCurrently ? (\n                    <TableRow>\n                      <TableCell align=\"center\">\n                        Currently Hospitalized\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {currentStateData.hospitalizedCurrently}\n                      </TableCell>\n                    </TableRow>\n                  ) : null}\n                  {currentStateData.inIcuCurrently ? (\n                    <TableRow>\n                      <TableCell align=\"center\">Currently in ICU</TableCell>\n                      <TableCell align=\"center\">\n                        {currentStateData.inIcuCurrently}\n                      </TableCell>\n                    </TableRow>\n                  ) : null}\n                  {currentStateData.onVentilatorCurrently ? (\n                    <TableRow>\n                      <TableCell align=\"center\">\n                        Currently on Ventilator\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {currentStateData.onVentilatorCurrently}\n                      </TableCell>\n                    </TableRow>\n                  ) : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        ) : null}\n      </Grid>\n    </div>\n  );\n};\n\nexport default USCards;\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyUSData } from \"../../api\";\nimport { Bar } from \"react-chartjs-2\";\nimport styles from \"./USChart.module.css\";\nimport moment from 'moment';\n \n\nconst USChart = ({ stateData, currentStateMetadata }) => {\n  const [dailyUSData, setDailyUSData] = useState([]);\n\n  useEffect(() => {\n    const fetchUSAPI = async () => {\n      setDailyUSData(await fetchDailyUSData());\n    };\n    fetchUSAPI();\n  }, []);\n\n  const BarColor = \"#A8DADC\";\n\n  const barChartUSCases = stateData.length ? (\n    <Bar\n      data={{\n        labels: stateData.map(({ date }) => new  moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: stateData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"rgba(0, 255, 0, 1)\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: {\n          display: true,\n          text: `${currentStateMetadata.stateName} Cases`,\n        },\n      }}\n    />\n  ) : (\n    <Bar\n      data={{\n        labels: dailyUSData.map(({ date }) => new moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: dailyUSData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"rgba(0, 255, 0, 1)\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: { display: true, text: `USA Cases` },\n      }}\n    />\n  );\n  const barChartUSDeaths = stateData.length ? (\n    <Bar\n      data={{\n        labels: stateData.map(({ date }) => new moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: stateData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: {\n          display: true,\n          text: `${currentStateMetadata.stateName} Deaths`,\n        },\n      }}\n    />\n  ) : (\n    <Bar\n      data={{\n        labels: dailyUSData.map(({ date }) => new moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: dailyUSData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: { display: true, text: `USA Deaths` },\n      }}\n    />\n  );\n\n  const barChartUSDailyCases = stateData.length ? (\n    <Bar\n      data={{\n        labels: stateData.map(({ date }) => new moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: stateData.map(({ dailyCases }) => dailyCases),\n            label: \"Daily New Cases\",\n            borderColor: \"red\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: {\n          display: true,\n          text: `${currentStateMetadata.stateName} Daily New Cases`,\n        },\n      }}\n    />\n  ) : (\n    <Bar\n      data={{\n        labels: dailyUSData.map(({ date }) => new moment(date).calendar('MMM Do YY')),\n        datasets: [\n          {\n            data: dailyUSData.map(({ dailyCases }) => dailyCases),\n            label: \"Daily New Cases\",\n            borderColor: \"red\",\n            backgroundColor: `${BarColor}`,\n            fill: true,\n          },\n        ],\n      }}\n      options={{\n        title: { display: true, text: `USA Daily New Cases` },\n      }}\n    />\n  );\n\n  return (\n    <>\n      <div className={styles.container}>{barChartUSCases}</div>\n      <div className={styles.container}>{barChartUSDeaths}</div>\n      <div className={styles.container}>{barChartUSDailyCases}</div>\n    </>\n  );\n};\n\nexport default USChart;\n","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport CovidHeader from \"../../images/covidheader.png\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className={styles.Navbar}>\n      <img className={styles.logo} src={CovidHeader} alt=\"covid data\"></img>\n      <div className={styles.ButtonContainer}>\n        <Link className={styles.Link} to=\"/\">\n          <Button variant=\"contained\" color=\"secondary\">\n            U.S.A.\n          </Button>\n        </Link>\n        <Link className={styles.Link} to=\"/world\">\n          <Button variant=\"contained\" color=\"secondary\">\n            World\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport styles from \"./NewsTicker.module.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst NewsTicker = ({ stateNews }) => {\n  console.log(stateNews);\n  const classes = useStyles();\n\n  const NewsCards = stateNews.length\n    ? stateNews.slice(0, 4).map((stateNews, i) => (\n        <Grid item height=\"100%\" component={Card} xs={10} md={3} key={i}>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardMedia\n                className={classes.media}\n                image={stateNews.urlToImage}\n                title=\"news\"\n              />\n              <CardContent className={classes.media}>\n                <Typography gutterBottom variant=\"body2\" component=\"h5\">\n                  {stateNews.title}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button href={stateNews.url} size=\"small\" color=\"primary\">\n                {stateNews.source.name}\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))\n    : null;\n\n  return (\n    <div className={styles.newsContainer}>\n      <h1>COVID News</h1>\n      <Grid container spacing={1}>\n        {NewsCards}\n      </Grid>\n    </div>\n  );\n};\n\nexport default NewsTicker;\n","import React from \"react\";\nimport {\n  Cards,\n  Chart,\n  CountryPicker,\n  USCards,\n  USChart,\n  StatePicker,\n  Navbar,\n  NewsTicker\n} from \"./components\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport {\n  fetchData,\n  fetchUSData,\n  fetchDailyStateData,\n  currentStateData,\n  currentStateNews,\n} from \"./api\";\nimport { Typography } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n    USData: {},\n    stateData: {},\n    currentState: \"\",\n    currentStateData: {},\n    stateNews: {},\n    currentStateMetadata: \"\"\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    const fetchedUSData = await fetchUSData();\n    const usNews = await currentStateNews(\"USA\")\n\n    this.setState({ data: fetchedData });\n    this.setState({ USData: fetchedUSData });\n    this.setState({stateNews: usNews})\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country });\n  };\n  handleStateChange = async (stateMetadata) => {\n    if (stateMetadata.stateCode.length === 0) {\n      const usNews = await currentStateNews(\"USA\")\n      this.setState({\n        stateData: {},\n        currentStateMetadata: \"\",\n        currentStateData: {},\n        stateNews: usNews\n      });\n    } else {\n      stateMetadata.stateCode = stateMetadata.stateCode.toLowerCase();\n      const fetchedDailyStateData = await fetchDailyStateData(\n        stateMetadata.stateCode\n      );\n      const fetchedCurrentStateData = await currentStateData(\n        stateMetadata.stateCode\n      );\n      console.log(stateMetadata)\n      const fetchedStateNews = await currentStateNews(stateMetadata.stateName.replace(/ /g,\"+\"))\n\n      this.setState({\n        stateData: fetchedDailyStateData,\n        currentStateMetadata: stateMetadata,\n        currentStateData: fetchedCurrentStateData,\n        stateNews: fetchedStateNews\n      });\n    }\n  };\n\n  render() {\n    const {\n      data,\n      country,\n      USData,\n      currentStateMetadata,\n      stateData,\n      currentStateData,\n       stateNews\n    } = this.state;\n    return (\n      <div className={styles.container}>\n        <Router>\n          <Navbar USData={USData} />\n          <Route path=\"/\" strict exact>\n            <h1>\n              {currentStateMetadata ? currentStateMetadata.stateName : \"USA\"}\n            </h1>\n            <StatePicker handleStateChange={this.handleStateChange} />\n            <USCards\n              USData={USData}\n              currentStateData={currentStateData}\n              currentStateMetadata={currentStateMetadata}\n            />\n            <USChart\n              stateData={stateData}\n              currentStateMetadata={currentStateMetadata}\n            />\n            <NewsTicker stateNews={stateNews}/>\n          </Route>\n          <Route path=\"/world\" strict exact>\n            <h1>{country ? `${country}` : \"World\"}</h1>\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\n            <Cards data={data} />\n            <Chart data={data} country={country} />\n          </Route>\n          <a href=\"http://www.lukassaylor.com/\">Lukas Saylor</a>\n          <Typography>2020</Typography>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//cdd0e980c7ae4905a7a7d2cdc5db6932 news api key","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      main:'#E63946'\n    },\n    secondary: {\n      main: '#1D3557'\n    }\n  }\n}\n\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n    <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1IxrI\",\"logo\":\"Navbar_logo__1H3m4\",\"ButtonContainer\":\"Navbar_ButtonContainer__1NoAM\",\"Link\":\"Navbar_Link__1VYRC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"USChart_container__33Vg-\"};"],"sourceRoot":""}